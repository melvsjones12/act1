{"version":3,"sources":["ball.js"],"names":["cc","Class","extends","Component","properties","acceleration","onLoad","accLeft","accRight","accUp","accDown","xSpeed","ySpeed","setInputControl","self","eventManager","addListener","event","EventListener","KEYBOARD","onKeyPressed","keyCode","KEY","a","d","w","s","onKeyReleased","node","update","dt","x","y"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACfC,sBAAc;AADC,KAHP;;AAOL;AACAC,YAAQ,kBAAY;AACvB;AACO,aAAKC,OAAL,GAAe,KAAf;AACA,aAAKC,QAAL,GAAgB,KAAhB;AACN,aAAKC,KAAL,GAAa,KAAb;AACA,aAAKC,OAAL,GAAe,KAAf;AACM;AACA,aAAKC,MAAL,GAAc,CAAd;AACN,aAAKC,MAAL,GAAc,CAAd;;AAEA,aAAKC,eAAL;AAEG,KApBI;;AAsBRA,qBAAiB,2BAAY;AACtB,YAAIC,OAAO,IAAX;AACA;AACAd,WAAGe,YAAH,CAAgBC,WAAhB,CAA4B;AACxBC,mBAAOjB,GAAGkB,aAAH,CAAiBC,QADA;AAExB;AACAC,0BAAc,sBAASC,OAAT,EAAkBJ,KAAlB,EAAyB;AACnC,wBAAOI,OAAP;AACI,yBAAKrB,GAAGsB,GAAH,CAAOC,CAAZ;AACIT,6BAAKP,OAAL,GAAe,IAAf;AACAO,6BAAKN,QAAL,GAAgB,KAAhB;AACA;AACJ,yBAAKR,GAAGsB,GAAH,CAAOE,CAAZ;AACIV,6BAAKP,OAAL,GAAe,KAAf;AACAO,6BAAKN,QAAL,GAAgB,IAAhB;AACA;AACJ,yBAAKR,GAAGsB,GAAH,CAAOG,CAAZ;AACIX,6BAAKL,KAAL,GAAa,IAAb;AACAK,6BAAKJ,OAAL,GAAe,KAAf;AACA;AACJ,yBAAKV,GAAGsB,GAAH,CAAOI,CAAZ;AACIZ,6BAAKL,KAAL,GAAa,KAAb;AACAK,6BAAKJ,OAAL,GAAe,IAAf;AACA;AAhBR;AAkBH,aAtBuB;AAuBxB;AACAiB,2BAAe,uBAASN,OAAT,EAAkBJ,KAAlB,EAAyB;AACpC,wBAAOI,OAAP;AACI,yBAAKrB,GAAGsB,GAAH,CAAOC,CAAZ;AACIT,6BAAKP,OAAL,GAAe,KAAf;AACA;AACJ,yBAAKP,GAAGsB,GAAH,CAAOE,CAAZ;AACIV,6BAAKN,QAAL,GAAgB,KAAhB;AACA;AACJ,yBAAKR,GAAGsB,GAAH,CAAOG,CAAZ;AACIX,6BAAKL,KAAL,GAAa,KAAb;AACA;AACJ,yBAAKT,GAAGsB,GAAH,CAAOI,CAAZ;AACIZ,6BAAKJ,OAAL,GAAc,KAAd;AACA;AAZR;AAcH;AAvCuB,SAA5B,EAwCGI,KAAKc,IAxCR;AAyCH,KAlEI;;AAoEL;AACAC,YAAQ,gBAAUC,EAAV,EAAc;;AAExB;AACM,YAAI,KAAKvB,OAAT,EAAkB;AACd,iBAAKI,MAAL,IAAe,KAAKN,YAAL,GAAmB,EAAnB,GAAuByB,EAAtC;AACH,SAFD,MAEO,IAAI,KAAKtB,QAAT,EAAmB;AACtB,iBAAKG,MAAL,IAAe,KAAKN,YAAL,GAAmB,EAAnB,GAAuByB,EAAtC;AACH,SAFM,MAEA;AACZ,iBAAKnB,MAAL,GAAc,CAAd;AACA;AACD;AACC,YAAI,KAAKF,KAAT,EAAgB;AACP,iBAAKG,MAAL,IAAe,KAAKP,YAAL,GAAmB,EAAnB,GAAuByB,EAAtC;AACH,SAFN,MAEY,IAAI,KAAKpB,OAAT,EAAkB;AACrB,iBAAKE,MAAL,IAAe,KAAKP,YAAL,GAAmB,EAAnB,GAAuByB,EAAtC;AACH,SAFM,MAEA;AACZ,iBAAKlB,MAAL,GAAc,CAAd;AACA;;AAEK;AACA,aAAKgB,IAAL,CAAUG,CAAV,IAAe,KAAKpB,MAAL,GAAcmB,EAA7B;AACN,aAAKF,IAAL,CAAUI,CAAV,IAAe,KAAKpB,MAAL,GAAckB,EAA7B;AACG;AA3FI,CAAT","file":"ball.js","sourceRoot":"..\\..\\..\\..\\assets\\Scripts","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\tacceleration: 0 \r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n\t// switch of acceleration direction\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n\t\tthis.accUp = false;\r\n\t\tthis.accDown = false;\r\n        // current horizontal speed of main character\r\n        this.xSpeed = 0;\r\n\t\tthis.ySpeed = 0;\r\n\t\t\r\n\t\tthis.setInputControl();\r\n\r\n    },\r\n\t\r\n\tsetInputControl: function () {\r\n        var self = this;\r\n        // add keyboard event listener\r\n        cc.eventManager.addListener({\r\n            event: cc.EventListener.KEYBOARD,\r\n            // When there is a key being pressed down, judge if it's the designated directional button and set up acceleration in the corresponding direction\r\n            onKeyPressed: function(keyCode, event) {\r\n                switch(keyCode) {\r\n                    case cc.KEY.a:\r\n                        self.accLeft = true;\r\n                        self.accRight = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accLeft = false;\r\n                        self.accRight = true;\r\n                        break;\r\n                    case cc.KEY.w:\r\n                        self.accUp = true;\r\n                        self.accDown = false;\r\n                        break;\t\t\t\t\t\r\n                    case cc.KEY.s:\r\n                        self.accUp = false;\r\n                        self.accDown = true;\r\n                        break;\t\t\t\t\t\t\t\t\t\t\t\r\n                }\r\n            },\r\n            // when releasing the button, stop acceleration in this direction\r\n            onKeyReleased: function(keyCode, event) {\r\n                switch(keyCode) {\r\n                    case cc.KEY.a:\r\n                        self.accLeft = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accRight = false;\r\n                        break;\r\n                    case cc.KEY.w:\r\n                        self.accUp = false;\r\n                        break;\t\t\r\n                    case cc.KEY.s:\r\n                        self.accDown= false;\r\n                        break;\t\t\t\t\t\t\t\t\t\t\r\n                }\r\n            }\r\n        }, self.node);\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n\t\t\r\n\t\t// update speed of each frame according to the current acceleration direction\r\n        if (this.accLeft) {\r\n            this.xSpeed += this.acceleration *10 *dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed -= this.acceleration *10 *dt;\r\n        } else {\r\n\t\t\tthis.xSpeed = 0;\r\n\t\t}\r\n\t\t// up and down\r\n\t\t if (this.accUp) {\r\n            this.ySpeed += this.acceleration *10 *dt;\r\n        } else if (this.accDown) {\r\n            this.ySpeed -= this.acceleration *10 *dt;\r\n        } else {\r\n\t\t\tthis.ySpeed = 0;\r\n\t\t}\r\n\t\t\r\n        // update the position of the main character according to the current speed\r\n        this.node.x += this.xSpeed * dt;\r\n\t\tthis.node.y += this.ySpeed * dt;\r\n    },\r\n});\r\n"]}